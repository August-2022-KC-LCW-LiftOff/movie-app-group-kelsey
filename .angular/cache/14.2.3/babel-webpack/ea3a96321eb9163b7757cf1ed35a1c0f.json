{"ast":null,"code":"import triggersJson from './../../assets/triggers.json';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\n\nfunction AddTriggerFormComponent_option_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const triggerTag_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", triggerTag_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", triggerTag_r2, \" \");\n  }\n}\n\nfunction AddTriggerFormComponent_option_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const subcategory_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"value\", ctx_r1.triggerSubcategories);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", subcategory_r3, \" \");\n  }\n}\n\nexport class User {}\nexport let AddTriggerFormComponent = /*#__PURE__*/(() => {\n  class AddTriggerFormComponent {\n    constructor() {\n      this.triggerTags = triggersJson.map(trigger => trigger.title);\n      this.selectedTrigger = \"\";\n      this.triggerSubcategories = [];\n    }\n\n    onSubmit(form) {\n      console.log(form.value);\n    }\n\n    onSelectedTriggerChange(trigg) {\n      this.selectedTrigger = trigg;\n      this.triggerSubcategories = triggersJson.find(trigger => trigger.title === trigg).subcategories;\n    }\n\n    ngOnInit() {}\n\n  }\n\n  AddTriggerFormComponent.ɵfac = function AddTriggerFormComponent_Factory(t) {\n    return new (t || AddTriggerFormComponent)();\n  };\n\n  AddTriggerFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddTriggerFormComponent,\n    selectors: [[\"app-add-trigger-form\"]],\n    decls: 26,\n    vars: 3,\n    consts: [[\"novalidate\", \"\"], [1, \"form-group\", \"merriweather\", \"col-12\"], [\"type\", \"text\", 1, \"form-control\"], [1, \"form-group\", \"merriweather\"], [1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"form-control\"], [1, \"btn\", \"btn-danger\", \"btn-block\"], [3, \"value\"]],\n    template: function AddTriggerFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\", 1)(2, \"label\");\n        i0.ɵɵtext(3, \"Review Headline\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\");\n        i0.ɵɵtext(7, \"Movie Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 3)(10, \"label\");\n        i0.ɵɵtext(11, \"Add Trigger Warning\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 3)(14, \"select\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function AddTriggerFormComponent_Template_select_ngModelChange_14_listener($event) {\n          return ctx.selectedTrigger = $event;\n        })(\"ngModelChange\", function AddTriggerFormComponent_Template_select_ngModelChange_14_listener($event) {\n          return ctx.onSelectedTriggerChange($event);\n        });\n        i0.ɵɵelementStart(15, \"option\", 5);\n        i0.ɵɵtext(16, \"Click to Select Trigger Category\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(17, AddTriggerFormComponent_option_17_Template, 2, 2, \"option\", 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"div\", 3)(19, \"select\", 7)(20, \"option\", 5);\n        i0.ɵɵtext(21, \"Click to Select Trigger Subcategory\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(22, AddTriggerFormComponent_option_22_Template, 2, 2, \"option\", 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"div\", 3)(24, \"button\", 8);\n        i0.ɵɵtext(25, \"Add Trigger Review\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedTrigger);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.triggerTags);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.triggerSubcategories);\n      }\n    },\n    dependencies: [i1.NgForOf, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgForm],\n    styles: [\".merriweather[_ngcontent-%COMP%]{font-family:Merriweather,serif}button[_ngcontent-%COMP%]{text-align:justify}\"]\n  });\n  return AddTriggerFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}